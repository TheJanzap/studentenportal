#  
# studentenportal ----- studentenportal-media:/var/www/studentenportal/media
#  ||__
#  | __ postgres ----- postgres-data:/var/lib/postgresql/data
#  ||__
#  | __ mailserver #TODO: postfix?
#  ||__
#  |___ webserver:80,:443  #TODO: TLS-frontend nginx or haproxy? let's encrypt auto TLS deployment?
#   
#TODO

# ~/studentenportal.env should set:
# - POSTGRES_DB_NAME (e.g. studentenportal)
# - POSTGRES_USER (e.g. studentenportal)
# - POSTGRES_PASSWORD (e.g. hunter2)
# - SECRET_KEY (for Django)

version: '3.5'
services:

# nginx - reverse proxy
  nginx:
    image: studentenportal-nginx

    build:
      context: .
      dockerfile: deploy/production/nginx/Dockerfile
      args:
          - UID=${UID-1000}
          - GID=${GID-1000}

    ports:
      - 80:80
      - 443:443

    networks:
      studentenportal-prod:
        aliases:
          - application

# postgres - Database server
  postgres:
    image: postgres:12

    volumes:
      # HOST:CONTAINER
      - "/home/studentenportal/postgres-data:/var/lib/postgresql/data"

    env_file:
      ~/studentenportal.env

    networks:
        studentenportal-prod:
          aliases:
            - database
            - postgres

    restart: on-failure

# studentenportal - Application server with python
  studentenportal:
    image: studentenportal/dev:latest

    build:
      context: .
      dockerfile: deploy/production/Dockerfile
      args:
          - UID=${UID-1000}
          - GID=${GID-1000}

    volumes:
      # HOST:CONTAINER
      - "/home/studentenportal/media:/srv/www/studentenportal/media"

    env_file:
      ~/studentenportal.env

    networks:
      studentenportal-prod:
        aliases:
          - application

    restart: on-failure

networks:
  studentenportal-prod:
    driver: bridge
